# This workflow will :
# - test the workstation scripts
# - test the createstubs on  multiple micropyton linux versions
# - test the minified createstubs on  multiple micropyton linux versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest mpflash
on:
    workflow_dispatch:
    pull_request:
        branches: [main]

    push:
        branches: [main, dev/*, feat/*, fix/*]
        paths:
            - .github/workflows/pytest_mpflash.yml
            - "src/mpflash/**"

env:
    JUPYTER_PLATFORM_DIRS: "1"
    # fix:  DeprecationWarning: Jupyter is migrating its paths to use standard platformdirs

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test_mpflash:
        name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                # os: [ubuntu-latest, windows-latest, macos-latest]
                # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
                include: # for testing
                    - os: ubuntu-latest
                      python-version: "3.10"
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install testspace client
              continue-on-error: true
              uses: testspace-com/setup-testspace@v1
              with:
                  domain: josverl

            #----------------------------------------------
            # poetry is not in the default image
            #----------------------------------------------
            - name: Install poetry and codecov
              run: |
                  pipx install poetry==1.3.1

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  cache: "poetry"

            #   #----------------------------------------------
            #   # install project
            #   #----------------------------------------------
            - name: Install mpflash & test dependencies
              continue-on-error: true
              working-directory: src/mpflash
              run: |
                  poetry install --with test --no-interaction

            - name: Test mpflash
              working-directory: src/mpflash
              run: |
                  poetry run coverage erase
                  poetry run coverage run -m pytest -m mpflash

            - name: create coverage report
              if: always()
              continue-on-error: true
              working-directory: src/mpflash
              run: |
                  poetry run coverage xml -o coverage-mpflash-${{ matrix.python-version }}-${{ matrix.os }}.xml

            # - name: scripted Codecov Upload coverage-mpflash.xml
            #   if: always()
            #   continue-on-error: true
            #   working-directory: src/mpflash
            #   run: |
            #       codecov --verbose upload-process --fail-on-error -F mpflash -f coverage-mpflash-${{ matrix.python-version }}-${{ matrix.os }}.xml

            - name: Upload coverage reports to Codecov with GitHub Action
              uses: codecov/codecov-action@v3
              with:
                  files: mpflash/coverage-mpflash-${{ matrix.python-version }}-${{ matrix.os }}.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
                  name: coverage-mpflash-${{ matrix.python-version }}-${{ matrix.os }}.xml

            #   #----------------------------------------------
            #   # upload coverage stats
            #   # .XML  to Codecov
            #   #----------------------------------------------

            # - name: Push result to Testspace server
            #   continue-on-error: true
            #   if: always() # ignore previous error
            #   run: |
            #       testspace [tests/${{ matrix.os }}/Python_${{ matrix.python-version }}]results/*.xml --link codecov

            # - uses: actions/upload-artifact@v4
            #   if: always() # ignore previous error
            #   with:
            #       path: results
            #       name: mpflash-coverage-${{ matrix.python-version }}-${{ matrix.os }}
