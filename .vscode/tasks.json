{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "run createstubs",
            "detail": "run createstubs in linux port",
            "type": "shell",
            "windows": {
                "command": "ubuntu run MICROPYPATH=./board ./tools/micropython board/createstubs.py"
            },
            "linux": {
                "command": "MICROPYPATH=./board ./tools/micropython board/createstubs.py"
            },
            "problemMatcher": []
        },
        {
            "label": "minify",
            "detail": "minify for esp8622",
            "type": "shell",
            "command": "stubber minify -all -complile",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "run minified",
            "detail": "run minified createstubs in linux port",
            "dependsOn": [
                "minify"
            ],
            "type": "shell",
            "windows": {
                "command": "ubuntu run ./tools/micropython minified/createstubs.py"
            },
            "linux": {
                "command": "./tools/micropython minified/createstubs.py"
            },
            "problemMatcher": []
        },
        {
            "label": "mpy-cross",
            "detail": "mpy-cross compile current file",
            "type": "shell",
            "command": "python -m mpy_cross ${file} -O3",
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "Sphinx: build documentation",
            "detail": "make clean html",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docs"
            },
            "command": "${workspaceFolder}/.venv/Scripts/Activate.ps1;&./make.bat clean;&./make.bat html",
            "linux": "make clean html"
        },
        {
            "label": "coverage",
            "detail": "run coverage for all tests",
            "type": "shell",
            "command": "poetry run coverage run -m pytest tests -m 'not basicgit' --junitxml=results/test-results.xml",
        },
        {
            "label": "coverage html",
            "detail": "update coverage html report",
            "type": "shell",
            "command": "poetry run coverage html",
        },
        {
            "label": "coverage ALL",
            "detail": "run coverage and create html report and .lcov file",
            "type": "shell",
            "command": "poetry run coverage lcov -o results/coverage.lcov",
            "dependsOn": [
                "coverage",
                "coverage html"
            ],
            "dependsOrder": "sequence"
        }
    ]
}