[tool.poetry]
name = "mpflash"
version = "1.24.7"
description = "Flash and download tool for MicroPython firmwares"
authors = ["Jos Verlinde <jos_verlinde@hotmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["MicroPython", "firmware", "flash", "download", "UF2", "esptool"]
homepage = "https://github.com/Josverl/mpflash/blob/main/README.md"
repository = "https://github.com/Josverl/mpflash"
classifiers = [
    "Programming Language :: Python :: Implementation :: MicroPython",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Build Tools",
]

[tool.poetry.scripts]
mpflash = "mpflash.cli_main:mpflash"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
beautifulsoup4 = "^4.12.3"
bincopy = "^20.0.0"
blkinfo = "^0.2.0"
cachetools = "^5.3.0"
esptool = "^4.7.0"
inquirer = "^3.2.4"
jsonlines = "^4.0.0"
jsons = "^1.6.3"
libusb = { version = "^1.0.27", platform = "win32" }
loguru = "^0.7.2"
mpremote = "^1.22.0"
packaging = "^24.2"
platformdirs = "^4.2.0"
psutil = "^5.9.8"
pygithub = "^2.1.1"
pyusb = "^1.2.1"
requests = "^2.31.0"
rich-click = "^1.8.1"
tenacity = "8.2.3"
cache-to-disk = "^2.0.0"
poetry = "^2.0.1"


[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-github-actions-annotate-failures = ">=0.1.7,<0.3.0"
pytest-json-report = "^1.5.0"
pytest-metadata = ">=2.0.2,<4.0.0"
pytest-mock = "^3.10.0"
#
coverage = ">=6.4.3,<8.0.0"
distro = "^1.8.0"
fasteners = "^0.19"
mock = "^4.0.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.pytest.ini_options]
minversion = "7.0"
python_functions = ["test_", "*_test"]
python_files = ["test_*.py", "*_test.py"]
testpaths = [
    "tests",
    "src/stubber",
    "src/mpflash",
    # "repos/micropython-stubs/tests",
]
norecursedirs = [
    ".*",
    ".*/*",
    # "repos/*",
    "tests/codemods/codemod_test_cases/*",
    "typings*",
]
junit_family = "xunit1"

addopts = "--verbose --capture=no -m 'not basicgit'"
#  -m 'not snippets'
# --numprocesses=auto 
# -m MARKEXPR           Only run tests matching given mark expression. For example: -m 'mark1 and not mark2'.
# -n --numprocesses=numprocesses - 

markers = [
    "mpflash: marks tests of the mpflash tool",
    "snippets: test snippets to check the stubs",

    "legacy: reeally old tests that need to be updated or removed",

    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: Integration tests (slower)",
    "mocked: to replace/compensate for most of the slow and git tests",
    #
    "cli: test command line interface",
    # os platforms
    "win32: run test only on Windows",
    "linux: run test only on linux",
    "darwin: run test only on Mac",
    # micropython version dependencies 


]
